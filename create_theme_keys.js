import { writeFileSync } from 'node:fs'
import { getTheme } from './src/theme.js'

const themeData = getTheme()

const flatten = (object, prefix = '', context = {}) => {
    return Object.entries(object).reduce((context, [key, value]) => {
        const path = prefix ? `${prefix}.${key}` : key
        // if value is an object then recursively flatten it
        // expect if its an array or  firestore field value
        if (typeof value === 'object' && !Array.isArray(value)) {
            flatten(value, path, context)
        } else {
            context[path] = value
        }
        return context
    }, context)
}

const flat = flatten(themeData)
// create an array of objects with format { internalKey: 'text.size.small', externalKey: 'TEXT_SIZE_SMALL' }
const keys = Object.entries(flat) //
    .filter(([key]) => key.endsWith('._value')) //
    .map(([key]) => {
        return {
            internalKey: key.substring(0, key.indexOf('._value')),
            externalKey: key.substring(0, key.indexOf('._value')).toUpperCase().replace(/\./g, '_')
        }
    })

const fileContent = ['// This file is auto generated by create_theme_keys.js. Please run it manually after adding new theme properties.']

keys.reduce((context, next) => {
    context.push(`export const ${next.externalKey} = '${next.internalKey}'`)
    return context
}, fileContent)

writeFileSync('src/theme-keys.js', fileContent.join('\n'), 'utf-8')